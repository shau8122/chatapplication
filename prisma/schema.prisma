// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  messageIds String[] @db.ObjectId
  messages Message[] @relation(fields: [messageIds], references: [id])

  seenChatsIds String[] @db.ObjectId
  seenChats Chat[] @relation("seen", fields: [seenChatsIds], references: [id])


  chats Chat[]
}
model Message{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  lastMessageAt DateTime @default(now())
  name String?
  isGroup Boolean?

  chatIds String[] @db.ObjectId
  chats Chat[]

  userIds String[] @db.ObjectId
  users User[] @relation(fields: [userIds], references: [id])
}

model Chat{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String?
  createdAt DateTime @default(now())

  seenIds String[] @db.ObjectId
  seen User[] @relation("seen", fields: [seenIds], references: [id])

  messageId String @db.ObjectId
  message Message @relation(fields: [messageId], references: [id], onDelete: Cascade)

  senderId String @db.ObjectId
  sender User @relation(fields: [senderId], references: [id], onDelete:Cascade)
}